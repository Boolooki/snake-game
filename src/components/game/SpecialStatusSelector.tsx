// components/ui/SpecialStatusSelector.tsx
import React from "react";
import { SpecialStatusFlags } from "@/hooks/useSpecialStatus";
import { useArrowKeySelector } from "@/hooks/useArrowKeySelector";

type Props = {
  onSelect: (status: keyof SpecialStatusFlags) => void;
  excludedKeys?: (keyof SpecialStatusFlags)[];
};

export default function SpecialStatusSelector({
  onSelect,
  excludedKeys,
}: Props) {
  const options: {
    key: keyof SpecialStatusFlags;
    label: string;
    description: string;
    emoji?: string;
  }[] = [
    {
      key: "doubleScore",
      label: "‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå",
      description: "‡πÑ‡∏î‡πâ‡πÅ‡∏ï‡πâ‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≠‡∏á‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      emoji: "‚≠ê",
    },
    {
      key: "extendedSpeedBurst",
      label: "‡πÄ‡∏£‡πà‡∏á‡∏£‡∏≤‡∏ß‡∏µ",
      description: "Speed Burst ‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô 2 ‡πÄ‡∏ó‡πà‡∏≤",
      emoji: "‚ö°",
    },
    {
      key: "slowSpeed",
      label: "‡πÄ‡∏¢‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤",
      description: "‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏≠‡∏á‡∏á‡∏π‡∏•‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ï‡∏±‡∏ß",
      emoji: "üê¢",
    },
    {
      key: "moreProduceMoretribute",
      label: "‡∏°‡∏≤‡∏Å‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏Å‡∏ö‡∏£‡∏£‡∏ì‡∏≤‡∏Å‡∏≤‡∏£",
      description: "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô +1 ‡∏≠‡∏±‡∏ô ‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡∏£‡∏∞‡πÄ‡∏ö‡∏¥‡∏î‡∏à‡∏∞‡∏™‡∏∏‡πà‡∏°‡∏à‡∏≤‡∏Å 3-10 ‡∏•‡∏π‡∏Å‡πÅ‡∏ó‡∏ô ( ‡∏à‡∏≤‡∏Å‡πÄ‡∏î‡∏¥‡∏° 1-5 ‡∏•‡∏π‡∏Å )",
      emoji: "üçé",
    },
    {
      key: "safeHeaven",
      label: "‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå‡∏õ‡∏±‡∏î‡∏õ‡πâ‡∏≠‡∏á",
      description: "‡∏™‡∏∏‡πà‡∏°‡πÑ‡∏î‡πâ‡∏£‡∏∞‡πÄ‡∏ö‡∏¥‡∏î‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏à‡∏∞-2‡∏•‡∏π‡∏Å",
      emoji: "üõ°Ô∏è",
    },
  ];

  const filteredOptions = options.filter(
    (opt) => !excludedKeys?.includes(opt.key)
  );

  const optionKeys = filteredOptions.map((opt) => opt.key);

  const { selectedIndex } = useArrowKeySelector(optionKeys, onSelect, true);

  return (
    <div className="fixed inset-0 flex justify-center items-center z-50 animate-[fadeIn_0.3s_ease-out_forwards]">
      <div className="bg-white p-6 rounded-lg shadow-2xl w-[90vw] max-w-md space-y-4">
        <h2 className="text-2xl font-bold text-center text-gray-800">
          ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©
        </h2>
        <p className="text-center text-sm text-gray-500">
          ‡πÉ‡∏ä‡πâ ‚Üë‚Üì ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å, Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
        </p>
        <ul className="space-y-3 max-h-[60vh] overflow-y-auto scrollbar-hide">
          {filteredOptions.map((opt, idx) => (
            <li
              key={opt.key}
              className={`
                border rounded-lg p-4 cursor-pointer 
                transition-all duration-200 ease-in-out
                ${
                  idx === selectedIndex
                    ? "bg-yellow-200 border-yellow-500 scale-105 shadow-lg"
                    : "border-gray-300 hover:bg-yellow-50 hover:border-yellow-300"
                }
              `}
              onClick={() => onSelect(opt.key)}
            >
              <div className="flex items-start gap-3">
                {opt.emoji && (
                  <span className="text-2xl flex-shrink-0">{opt.emoji}</span>
                )}
                <div className="flex-1">
                  <p className="font-semibold text-gray-800 mb-1">
                    {opt.label}
                  </p>
                  <p className="text-sm text-gray-600 leading-relaxed">
                    {opt.description}
                  </p>
                </div>
                {idx === selectedIndex && (
                  <span className="text-yellow-500 flex-shrink-0 text-xl">
                    ‚ñ∂
                  </span>
                )}
              </div>
            </li>
          ))}
        </ul>
        <p className="text-center text-xs text-gray-400 mt-4">
          ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
        </p>
      </div>
    </div>
  );
}
